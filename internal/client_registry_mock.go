// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ory/hydra/client (interfaces: InternalRegistry)

// Package internal is a generated GoMock package.
package internal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	fosite "github.com/ory/fosite"
	herodot "github.com/ory/herodot"
	client "github.com/ory/hydra/client"
)

// MockInternalRegistry is a mock of InternalRegistry interface
type MockInternalRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockInternalRegistryMockRecorder
}

// MockInternalRegistryMockRecorder is the mock recorder for MockInternalRegistry
type MockInternalRegistryMockRecorder struct {
	mock *MockInternalRegistry
}

// NewMockInternalRegistry creates a new mock instance
func NewMockInternalRegistry(ctrl *gomock.Controller) *MockInternalRegistry {
	mock := &MockInternalRegistry{ctrl: ctrl}
	mock.recorder = &MockInternalRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInternalRegistry) EXPECT() *MockInternalRegistryMockRecorder {
	return m.recorder
}

// ClientHasher mocks base method
func (m *MockInternalRegistry) ClientHasher() fosite.Hasher {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClientHasher")
	ret0, _ := ret[0].(fosite.Hasher)
	return ret0
}

// ClientHasher indicates an expected call of ClientHasher
func (mr *MockInternalRegistryMockRecorder) ClientHasher() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClientHasher", reflect.TypeOf((*MockInternalRegistry)(nil).ClientHasher))
}

// ClientManager mocks base method
func (m *MockInternalRegistry) ClientManager() client.Manager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClientManager")
	ret0, _ := ret[0].(client.Manager)
	return ret0
}

// ClientManager indicates an expected call of ClientManager
func (mr *MockInternalRegistryMockRecorder) ClientManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClientManager", reflect.TypeOf((*MockInternalRegistry)(nil).ClientManager))
}

// ClientValidator mocks base method
func (m *MockInternalRegistry) ClientValidator() *client.Validator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClientValidator")
	ret0, _ := ret[0].(*client.Validator)
	return ret0
}

// ClientValidator indicates an expected call of ClientValidator
func (mr *MockInternalRegistryMockRecorder) ClientValidator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClientValidator", reflect.TypeOf((*MockInternalRegistry)(nil).ClientValidator))
}

// Writer mocks base method
func (m *MockInternalRegistry) Writer() herodot.Writer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Writer")
	ret0, _ := ret[0].(herodot.Writer)
	return ret0
}

// Writer indicates an expected call of Writer
func (mr *MockInternalRegistryMockRecorder) Writer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Writer", reflect.TypeOf((*MockInternalRegistry)(nil).Writer))
}
